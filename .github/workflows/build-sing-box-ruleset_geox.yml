name: Build sing-box-ruleset_geox
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/build-clash-ruleset_geox.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          echo "update_version=$(date -d '+8 hours' +%Y-%m-%d)" >> ${GITHUB_ENV}
          echo "ads=https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml" >> $GITHUB_ENV
          echo "private1=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/private" >> $GITHUB_ENV
          echo "private2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml" >> $GITHUB_ENV
          echo "microsoft_cn=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/microsoft" >> $GITHUB_ENV
          echo "apple_cn=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "google_cn=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "games_cn1=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/category-games" >> $GITHUB_ENV
          echo "games_cn2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.yaml" >> $GITHUB_ENV
          echo "games_cn3=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.yaml" >> $GITHUB_ENV
          echo "netflix=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix_Classical.yaml" >> $GITHUB_ENV
          echo "disney=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.yaml" >> $GITHUB_ENV
          echo "max=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.yaml" >> $GITHUB_ENV
          echo "primevideo=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrimeVideo/PrimeVideo.yaml" >> $GITHUB_ENV
          echo "appletv=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.yaml" >> $GITHUB_ENV
          echo "youtube=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml" >> $GITHUB_ENV
          echo "tiktok=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.yaml" >> $GITHUB_ENV
          echo "bilibili=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.yaml" >> $GITHUB_ENV
          echo "ai1=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml" >> $GITHUB_ENV
          echo "ai2=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml" >> $GITHUB_ENV
          echo "ai3=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BardAI/BardAI.yaml" >> $GITHUB_ENV
          echo "networktest=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml" >> $GITHUB_ENV
          echo "applications=https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt" >> $GITHUB_ENV
          echo "proxy=https://raw.githubusercontent.com/Loyalsoldier/domain-list-custom/release/geolocation-!cn.txt" >> $GITHUB_ENV
          echo "cn=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml" >> $GITHUB_ENV
          echo "telegramip=https://core.telegram.org/resources/cidr.txt" >> $GITHUB_ENV
          echo "cnip=https://raw.githubusercontent.com/DustinWin/geoip/master/IPs/cn.txt" >> $GITHUB_ENV
        shell: bash

      - name: Checkout codebase
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Checkout cokebar/gfwlist2dnsmasq
        uses: actions/checkout@v4
        with:
          repository: cokebar/gfwlist2dnsmasq
          path: gfwlist2dnsmasq

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./community/go.mod
          cache-dependency-path: ./community/go.sum

      - name: Checkout DustinWin/ruleset_geox
        uses: actions/checkout@v4
        with:
          ref: clash
          path: clash

      - name: Checkout DustinWin/geoip
        uses: actions/checkout@v4
        with:
          repository: DustinWin/geoip
          ref: sing-box
          path: sing-box/geoip

      - name: Download ads
        run: |
          mkdir -p ./tmp/geox ./sing-box/geox/ ./sing-box/ruleset/
          mkdir -p ./sing-box/ruleset/ads/
          curl -sSL ${ads} | grep -v '#' | sed '/^\s*$/d' | sed "s/- '+\./- DOMAIN-SUFFIX,/g" | sed "s/- '/- DOMAIN,/g" | sed 's/'\''$//g' > ./sing-box/ruleset/ads/ads.yaml

      - name: Download private
        run: |
          mkdir -p ./sing-box/ruleset/private/
          cat <<EOF > ./tmp/temp-private.yaml
            - DOMAIN,clash.razord.top
            - DOMAIN,clash.metacubex.one
            - DOMAIN,yacd.haishan.me
            - DOMAIN,yacd.metacubex.one
            - DOMAIN,d.metacubex.one
            - DOMAIN,metacubex.github.io
            - DOMAIN,metacubexd.pages.dev
          EOF
          curl -sSL ${private1} | grep -Ev '#|full:|keyword:|regexp:' | sed '/^\s*$/d' | sed 's/^/  - DOMAIN-SUFFIX,/g' >> ./tmp/temp-private.yaml
          curl -sSL ${private1} | grep 'full:' | sed 's/^full:/  - DOMAIN,/g' >> ./tmp/temp-private.yaml
          curl -sSL ${private1} | grep 'keyword:' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' >> ./tmp/temp-private.yaml
          curl -sSL ${private2} | grep -Ev '#|payload:|- IP-CIDR' | sed '/^\s*$/d' >> ./tmp/temp-private.yaml
          echo 'payload:' > ./sing-box/ruleset/private/private.yaml
          sort --ignore-case -u ./tmp/temp-private.yaml >> ./sing-box/ruleset/private/private.yaml
          
      - name: Download microsoft-cn
        run: |
          mkdir -p ./sing-box/ruleset/microsoft-cn/
          count1=$(curl -sSL ${microsoft_cn} | grep 'include:' | wc -l)
          curl -sSL ${microsoft_cn} | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' > ./tmp/temp-microsoft-cn.yaml
          curl -sSL ${microsoft_cn} | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
          curl -sSL ${microsoft_cn} | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
          for((i=0;i<count1;i++)); do
            archs1=$(curl -sSL ${microsoft_cn} | grep 'include:' | sed 's/^include://g' | sed -n "$((i+1))p")
            count2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | wc -l)
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
            for((j=0;j<count2;j++)); do
              archs2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | sed 's/^include://g' | sed -n "$((j+1))p")
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-microsoft-cn.yaml
            done
          done
          echo 'payload:' > ./sing-box/ruleset/microsoft-cn/microsoft-cn.yaml
          sort --ignore-case -u ./tmp/temp-microsoft-cn.yaml >> ./sing-box/ruleset/microsoft-cn/microsoft-cn.yaml

      - name: Download apple-cn
        run: |
          mkdir -p ./sing-box/ruleset/apple-cn/
          echo 'payload:' > ./sing-box/ruleset/apple-cn/apple-cn.yaml
          curl -sSL ${apple_cn} | perl -ne '/^server=\/([^\/]+)\// && print "  - DOMAIN,$1\n"' >> ./sing-box/ruleset/apple-cn/apple-cn.yaml

      - name: Download google-cn
        run: |
          mkdir -p ./sing-box/ruleset/google-cn/
          echo 'payload:' > ./sing-box/ruleset/google-cn/google-cn.yaml
          curl -sSL ${google_cn} | perl -ne '/^server=\/([^\/]+)\// && print "  - DOMAIN,$1\n"' >> ./sing-box/ruleset/google-cn/google-cn.yaml

      - name: Download games-cn
        run: |
          mkdir -p ./sing-box/ruleset/games-cn/
          count1=$(curl -sSL ${games_cn1} | grep 'include:' | wc -l)
          curl -sSL ${games_cn1} | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' > ./tmp/temp-games-cn.yaml
          curl -sSL ${games_cn1} | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
          curl -sSL ${games_cn1} | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
          for((i=0;i<count1;i++)); do
            archs1=$(curl -sSL ${games_cn1} | grep 'include:' | sed 's/^include://g' | sed -n "$((i+1))p")
            count2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | wc -l)
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
            curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
            for((j=0;j<count2;j++)); do
              archs2=$(curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs1" | grep 'include:' | sed 's/^include://g' | sed -n "$((j+1))p")
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep -Ev '#|full:|keyword:|regexp:' | grep '@cn' | sed 's/^/  - DOMAIN-SUFFIX,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep 'full:' | grep '@cn' | sed 's/^full:/  - DOMAIN,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
              curl -sSL "https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/$archs2" | grep 'keyword:' | grep '@cn' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' | sed 's/ *@cn$//g' >> ./tmp/temp-games-cn.yaml
            done
          done
          curl -sSL ${games_cn2} | grep -Ev '#|payload:' | sed '/^\s*$/d' >> ./tmp/temp-games-cn.yaml
          curl -sSL ${games_cn3} | grep -Ev '#|payload:' | sed '/^\s*$/d' >> ./tmp/temp-games-cn.yaml
          echo 'payload:' > ./sing-box/ruleset/games-cn/games-cn.yaml
          sort --ignore-case -u ./tmp/temp-games-cn.yaml >> ./sing-box/ruleset/games-cn/games-cn.yaml

      - name: Download netflix
        run: |
          mkdir -p ./sing-box/ruleset/netflix/
          curl -sSL ${netflix} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/netflix/netflix.yaml

      - name: Download disney
        run: |
          mkdir -p ./sing-box/ruleset/disney/
          curl -sSL ${disney} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/disney/disney.yaml

      - name: Download max
        run: |
          mkdir -p ./sing-box/ruleset/max/
          curl -sSL ${max} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/max/max.yaml

      - name: Download primevideo
        run: |
          mkdir -p ./sing-box/ruleset/primevideo/
          curl -sSL ${primevideo} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/primevideo/primevideo.yaml

      - name: Download appletv
        run: |
          mkdir -p ./sing-box/ruleset/appletv/
          curl -sSL ${appletv} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/appletv/appletv.yaml

      - name: Download youtube
        run: |
          mkdir -p ./sing-box/ruleset/youtube/
          curl -sSL ${youtube} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/youtube/youtube.yaml

      - name: Download tiktok
        run: |
          mkdir -p ./sing-box/ruleset/tiktok/
          curl -sSL ${tiktok} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/tiktok/tiktok.yaml

      - name: Download bilibili
        run: |
          mkdir -p ./sing-box/ruleset/bilibili/
          curl -sSL ${bilibili} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/bilibili/bilibili.yaml

      - name: Download ai
        run: |
          mkdir -p ./sing-box/ruleset/ai/
          curl -sSL ${ai1} | grep -Ev '#|payload:' | sed '/^\s*$/d' > ./tmp/temp-ai.yaml
          curl -sSL ${ai2} | grep -Ev '#|payload:' | sed '/^\s*$/d' >> ./tmp/temp-ai.yaml
          curl -sSL ${ai3} | grep -Ev '#|payload:' | sed '/^\s*$/d' >> ./tmp/temp-ai.yaml
          echo 'payload:' > ./sing-box/ruleset/ai/ai.yaml
          sort --ignore-case -u ./tmp/temp-ai.yaml >> ./sing-box/ruleset/ai/ai.yaml

      - name: Download networktest
        run: |
          mkdir -p ./sing-box/ruleset/networktest/
          curl -sSL ${networktest} | grep -v '#' | sed '/^\s*$/d' > ./sing-box/ruleset/networktest/networktest.yaml
          cat <<EOF >> ./sing-box/ruleset/networktest/networktest.yaml
            - DOMAIN-KEYWORD,ipv6-test
            - DOMAIN-KEYWORD,ipv6test
            - DOMAIN-KEYWORD,test-ipv6
            - DOMAIN-KEYWORD,testipv6
          EOF

      - name: Download applications
        run: |
          mkdir -p ./sing-box/ruleset/applications/
          curl -sSL ${applications} | sed '/^\s*$/d' > ./sing-box/ruleset/applications/applications.yaml

      - name: Download proxy
        run: |
          mkdir -p ./sing-box/ruleset/proxy/
          cd ./gfwlist2dnsmasq/ || exit 1
          chmod +x ./gfwlist2dnsmasq.sh
          ./gfwlist2dnsmasq.sh -l -o ../tmp/temp-proxy1.yaml
          sed "s/^/  - DOMAIN-SUFFIX,/g" ../tmp/temp-proxy1.yaml > ../tmp/temp-proxy2.yaml
          curl -sSL ${proxy} | grep 'domain:' | sed 's/:@\!cn$//g' | sed 's/^domain:/  - DOMAIN-SUFFIX,/g' >> ../tmp/temp-proxy2.yaml
          curl -sSL ${proxy} | grep 'full:' | sed 's/:@\!cn$//g' | sed 's/^full:/  - DOMAIN,/g' >> ../tmp/temp-proxy2.yaml
          curl -sSL ${proxy} | grep 'keyword:' | sed 's/:@\!cn$//g' | sed 's/^keyword:/  - DOMAIN-KEYWORD,/g' >> ../tmp/temp-proxy2.yaml
          echo 'payload:' > ../sing-box/ruleset/proxy/proxy.yaml
          sort --ignore-case -u ../tmp/temp-proxy2.yaml >> ../sing-box/ruleset/proxy/proxy.yaml

      - name: Download cn
        run: |
          mkdir -p ./sing-box/ruleset/cn/
          curl -sSL ${cn} | grep -Ev '#|- IP-CIDR' | sed '/^\s*$/d' > ./sing-box/ruleset/cn/cn.yaml
          echo "  - DOMAIN,static.adtidy.org" >> ./sing-box/ruleset/cn/cn.yaml

      - name: Download telegramip
        run: |
          mkdir -p ./sing-box/ruleset/telegramip/
          curl -sSL ${telegramip} | grep -v '::' | sed '/^\s*$/d' | sed 's/^/  - IP-CIDR,/g' > ./tmp/temp-telegramip.yaml
          curl -sSL ${telegramip} | grep '::' | sed 's/^/  - IP-CIDR6,/g' >> ./tmp/temp-telegramip.yaml
          echo 'payload:' > ./sing-box/ruleset/telegramip/telegramip.yaml
          sort --ignore-case -u ./tmp/temp-telegramip.yaml >> ./sing-box/ruleset/telegramip/telegramip.yaml

      - name: Download privateip
        run: |
          mkdir -p ./sing-box/ruleset/privateip/
          echo 'payload:' > ./sing-box/ruleset/privateip/privateip.yaml
          curl -sSL ${private2} | grep -v '#' | grep -- '- IP-CIDR' >> ./sing-box/ruleset/privateip/privateip.yaml

      - name: Download cnip
        run: |
          mkdir -p ./sing-box/ruleset/cnip/
          curl -sSL ${cnip} | grep -v '::' | sed '/^\s*$/d' | sed 's/^/  - IP-CIDR,/g' > ./tmp/temp-cnip.yaml
          curl -sSL ${cnip} | grep '::' | sed 's/^/  - IP-CIDR6,/g' >> ./tmp/temp-cnip.yaml
          echo 'payload:' > ./sing-box/ruleset/cnip/cnip.yaml
          sort --ignore-case -u ./tmp/temp-cnip.yaml >> ./sing-box/ruleset/cnip/cnip.yaml

      - name: Build db file
        env:
          NO_SKIP: true
        run: |
          cp -f ./sing-box/geoip/* ./sing-box/geox/
          cp -f ./clash/geox/*.dat ./tmp/geox/
          cd ./tmp/geox/ || exit 1
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          for file in $(ls | sed 's/\..*//g'); do
            geo convert site -i v2ray -o sing -f "./${file}.db" "./${file}.dat"
          done

      - name: Move files
        run: |
          cd ./tmp/geox/ || exit 1
          for file in $(ls *.db); do
            install -Dp "./${file}" ../../sing-box/geox/
          done

      - name: Download and unzip `sing-box core`
        run: |
          sing_box_version=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases/latest | grep 'tag_name' | sed 's/.*v//g' | sed 's/",$//g')
          wget "https://github.com/SagerNet/sing-box/releases/download/v${sing_box_version}/sing-box-${sing_box_version}-linux-amd64.tar.gz" -O - | tar -zxf - -C ./tmp/
          cp -f ./tmp/sing-box-${sing_box_version}-linux-amd64/sing-box ./sing-box/ruleset/
          rm -rf ./tmp*

      - name: Generate sing-box-ruleset
        env:
          NO_SKIP: true
        run: |
          curl -sSL https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/master/resouces/bm7.sh | sed 's|./rule/Clash/|./|g' > ./sing-box/ruleset/bm7.sh
          sed -i '/# 拉文件/,/# 处理文件/d' bm7.sh
          cd ./sing-box/ruleset/
          chmod +x bm7.sh && ./bm7.sh
          rm -rf bm7*

      - name: Git push assets to `sing-box` branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add ./geox/ ./ruleset/
          git commit -m "sing-box ruleset_geox 更新于 ${update_version}"
          git remote add ruleset_geox "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u ruleset_geox sing-box

      - name: Purge jsDelivr CDN
        run: |
          cd ./sing-box/geox/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/geox/${file}"
          done
          cd ../ruleset/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/ruleset/${file}"
          done
          
