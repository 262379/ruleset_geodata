name: Build geosite files
on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *"
  push:
    branches:
      - master/off
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
          repo: DustinWin/clash-geosite

      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "BLACKMATRIX7_ADVERTISING_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising.list" >> $GITHUB_ENV
          echo "ADGUARD_DNS_FILTER_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AdGuardSDNSFilter/AdGuardSDNSFilter.list" >> $GITHUB_ENV
          echo "PRIVATE_URL=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/private" >> $GITHUB_ENV
          echo "PRIVATE_TRACKER_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker.list" >> $GITHUB_ENV
          echo "TRACKERS_LIST_URL=https://gitea.com/XIU2/TrackersListCollection/raw/branch/master/all.txt" >> $GITHUB_ENV
          echo "SPEEDTEST_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list" >> $GITHUB_ENV
          echo "TEST_IPV6_URL=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/test-ipv6" >> $GITHUB_ENV
          echo "NETWORK_URL=https://raw.githubusercontent.com/DustinWin/clash-geosite/master/Rule-Files/network.txt" >> $GITHUB_ENV
          echo "MICROSOFT_URL=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/microsoft" >> $GITHUB_ENV
          echo "APPLE_CN_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/apple.china.conf" >> $GITHUB_ENV
          echo "GOOGLE_CN_URL=https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf" >> $GITHUB_ENV
          echo "CATEGORY_GAMES_URL=https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/category-games" >> $GITHUB_ENV
          echo "PROXY_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy.list" >> $GITHUB_ENV
          echo "PROXY_CUSTOM_URL=https://raw.githubusercontent.com/DustinWin/clash-geosite/master/Rule-Files/proxy.txt" >> $GITHUB_ENV
          echo "DIRECT_URL=https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.list" >> $GITHUB_ENV
        shell: bash

      - name: Checkout the "hidden" branch of this repo
        uses: actions/checkout@v3
        with:
          ref: hidden

      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v3
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v3
        with:
          repository: v2fly/domain-list-community
          path: community

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./custom/go.mod

      - name: Get geoip.dat relative files
        run: |
          wget https://github.com/DustinWin/clash-geoip/raw/release/geoip.dat

      - name: Generate category-ads-all
        env:
          SED1: sed '/^\s*#/d' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g' | sed '/^\s*IP-CIDR/d'
          SED2: sed '/^\s*#/d' | sed 's/DOMAIN,/full:/g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $BLACKMATRIX7_ADVERTISING_URL | ${{ env.SED1 }} > ./community/data/category-ads-all1
          curl -sSL $ADGUARD_DNS_FILTER_URL | ${{ env.SED2 }} >> ./community/data/category-ads-all1
          sort ./community/data/category-ads-all1 | uniq -i > ./community/data/category-ads-all
          rm -f ./community/data/category-ads-all1

      - name: Generate private
        run: |
          curl -sSL $PRIVATE_URL > ./community/data/private

      - name: Generate tracker
        env:
          SED: sed '/^\s*#/d' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $PRIVATE_TRACKER_URL | ${{ env.SED }} > ./community/data/tracker1
          curl -sSL $TRACKERS_LIST_URL | grep -i "\.[A-Z]" | sed 's/^.*\/\///g' | sed 's/:.*\/.*//g' >> ./community/data/tracker1
          sort ./community/data/tracker1 | uniq -i > ./community/data/tracker
          rm -f ./community/data/tracker1

      - name: Generate network
        env:
          SED: sed '/^\s*#/d' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g'
        run: |
          curl -sSL $SPEEDTEST_URL | ${{ env.SED }} > ./community/data/network1
          curl -sSL $TEST_IPV6_URL >> ./community/data/network1
          curl -sSL $NETWORK_URL >> ./community/data/network1
          sort ./community/data/network1 | uniq -i > ./community/data/network
          rm -f ./community/data/network1

      - name: Generate microsoft@cn
        run: |
          curl -sSL $MICROSOFT_URL | sed '/@cn/!d' > ./community/data/microsoft

      - name: Generate apple@cn
        run: |
          curl -sSL $APPLE_URL | sed 's/server=\//full:/g' | sed 's/\/.*//g' > ./community/data/apple

      - name: Generate google@cn
        run: |
          curl -sSL $GOOGLE_URL | sed 's/server=\//full:/g' | sed 's/\/.*//g' > ./community/data/google

      - name: Generate category-games@cn
        run: |
          curl -sSL $CATEGORY_GAMES_URL | sed '/@cn/!d' > ./community/data/category-games

      - name: Generate geolocation-!cn
        env:
          SED: sed '/^\s*#/d' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $PROXY_URL | ${{ env.SED }} > ./community/data/geolocation-\!cn1
          curl -sSL $PROXY_CUSTOM_URL >> ./community/data/geolocation-\!cn1
          sort ./community/data/geolocation-\!cn1 | uniq -i > ./community/data/geolocation-\!cn
          rm -f ./community/data/geolocation-\!cn1

      - name: Generate cn
        env:
          SED: sed '/^\s*#/d' | sed 's/^PROCESS-NAME,//' | sed 's/DOMAIN,/full:/g' | sed 's/DOMAIN-SUFFIX,//g' | sed 's/DOMAIN-KEYWORD,/keyword:/g' | sed '/^\s*IP-CIDR/d'
        run: |
          curl -sSL $DIRECT_URL | ${{ env.SED }} > ./community/data/cn

      - name: Build geosite.dat file
        run: |
          cd custom || exit 1
          go run ./ --datapath=../community/data

      - name: Move files
        run: |
          mkdir -p ./publish/
          wget https://raw.githubusercontent.com/DustinWin/clash-geoip/release/Country.mmdb -O ./publish/Country.mmdb
          install -Dp ./geoip.dat ./publish/geoip.dat
          install -Dp ./custom/publish/geosite.dat ./publish/geosite.dat
          cd ./publish || exit 1

      - name: Release and upload assets
        uses: softprops/action-gh-release@v0.1.6
        with:
          name: latest
          tag_name: latest
          draft: false
          prerelease: false
          files: |
            ./publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
